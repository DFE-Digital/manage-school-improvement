// <auto-generated />
using System;
using Dfe.ManageSchoolImprovement.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dfe.ManageSchoolImprovement.Infrastructure.Migrations
{
    [DbContext(typeof(RegionalImprovementForStandardsAndExcellenceContext))]
    [Migration("20250929082808_add-engagement-concern-summary-field")]
    partial class addengagementconcernsummaryfield
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.EngagementConcern", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EngagementConcernDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EngagementConcernEscalationConfirmStepsTaken")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EngagementConcernEscalationDateOfDecision")
                        .HasColumnType("datetime2");

                    b.Property<string>("EngagementConcernEscalationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngagementConcernEscalationPrimaryReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngagementConcernEscalationWarningNotice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EngagementConcernRaisedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("EngagementConcernResolved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EngagementConcernResolvedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EngagementConcernResolvedDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngagementConcernSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("ReadableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReadableId"));

                    b.Property<int>("SupportProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupportProjectId");

                    b.ToTable("EngagementConcerns", "RISE");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("EngagementConcernsHistory", "RISE");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.FundingHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinancialYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FundingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FundingRounds")
                        .HasColumnType("int");

                    b.Property<string>("FundingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("ReadableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReadableId"));

                    b.Property<int>("SupportProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupportProjectId");

                    b.ToTable("FundingHistories", "RISE");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("FundingHistoriesHistory", "RISE");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ObjectivesSectionComplete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("ReadableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReadableId"));

                    b.Property<int>("SupportProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupportProjectId");

                    b.ToTable("ImprovementPlans", "RISE");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("ImprovementPlansHistory", "RISE");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlanObjective", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AreaOfImprovement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImprovementPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("ReadableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReadableId"));

                    b.HasKey("Id");

                    b.HasIndex("ImprovementPlanId");

                    b.ToTable("ImprovementPlanObjectives", "RISE");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("ImprovementPlanObjectivesHistory", "RISE");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlanObjectiveProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("HowIsSchoolProgressing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImprovementPlanObjectiveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ImprovementPlanReviewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("ProgressDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReadableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReadableId"));

                    b.HasKey("Id");

                    b.HasIndex("ImprovementPlanReviewId");

                    b.ToTable("ImprovementPlanObjectiveProgresses", "RISE");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("ImprovementPlanObjectiveProgressesHistory", "RISE");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlanReview", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("HowIsTheSchoolProgressingOverall")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImprovementPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("OverallProgressDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("ReadableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReadableId"));

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reviewer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImprovementPlanId");

                    b.ToTable("ImprovementPlanReviews", "RISE");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("ImprovementPlanReviewsHistory", "RISE");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.SupportProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AddRecipientsForFormalNotification")
                        .HasColumnType("bit");

                    b.Property<string>("AdviserEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdviserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AdviserVisitDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("AssessmentToolTwoCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("AssignedDeliveryOfficerEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedDeliveryOfficerFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AttachSchoolImprovementPlan")
                        .HasColumnType("bit");

                    b.Property<bool?>("AttachTargetedInterventionInformationSheet")
                        .HasColumnType("bit");

                    b.Property<bool?>("CaseStudyCandidate")
                        .HasColumnType("bit");

                    b.Property<string>("CaseStudyDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CheckChoiceWithTrustRelationshipManagerOrLaLead")
                        .HasColumnType("bit");

                    b.Property<bool?>("CheckOrganisationHasCapacityAndWillingToProvideSupport")
                        .HasColumnType("bit");

                    b.Property<bool?>("CheckTheOrganisationHasAVendorAccount")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConfirmAmountOfPlanningGrantFundingRequested")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConfirmFundingBand")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConfirmPlanClearedByRiseGrantTeam")
                        .HasColumnType("bit");

                    b.Property<bool?>("CopyInRegionalDirector")
                        .HasColumnType("bit");

                    b.Property<bool?>("CopyInRegionalDirectorRequestingPlanningGrantOfferEmail")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAdviserAllocated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateConflictsOfInterestWereChecked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDueDiligenceCompleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFormalNotificationSent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateImprovementGrantOfferLetterSent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSupportOrganisationChosen")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateSupportingOrganisationContactDetailsAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTeamContactedForConfirmingPlanningGrantOfferLetter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTeamContactedForRequestingImprovementGrantOfferLetter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTeamContactedForRequestingPlanningGrantOfferLetter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTemplatesAndIndicativeFundingBandSent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisapprovingImprovementPlanDecisionNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisapprovingSupportingOrganisationAppointmentNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DiscussChoiceWithSfso")
                        .HasColumnType("bit");

                    b.Property<bool?>("FormalNotificationSent")
                        .HasColumnType("bit");

                    b.Property<string>("FundingBand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FundingHistoryDetailsComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("GiveTheAdviserTheNoteOfVisitTemplate")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasAcknowledgedAndWillEngage")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasApprovedImprovementPlanDecision")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasCompleteAssessmentTemplate")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasConfirmedSupportingOrganisationAppointment")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasEmailedAgreedPlanToRegionalDirectorForApproval")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasReceivedFundingInThelastTwoYears")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasSavedImprovementPlanInSharePoint")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasSavedSchoolResponseinSharePoint")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasShareEmailTemplateWithAdviser")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasTalkToAdviserAboutFindings")
                        .HasColumnType("bit");

                    b.Property<bool?>("ImprovementPlanAndExpenditurePlanWithIndicativeFundingBandSentToSupportingOrganisationAndSchoolsResponsibleBody")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ImprovementPlanReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IncludeContactDetails")
                        .HasColumnType("bit");

                    b.Property<bool?>("IncludeContactDetailsRequestingPlanningGrantOfferEmail")
                        .HasColumnType("bit");

                    b.Property<string>("IndicativeFundingBand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IndicativeFundingBandCalculated")
                        .HasColumnType("bit");

                    b.Property<string>("InformationPowersDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("InformationPowersInUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("InitialContactResponsibleBody")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InitialContactResponsibleBodyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InitialDiagnosisMatchingDecision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitialDiagnosisMatchingDecisionNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("InterimExecutiveBoardCreated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InterimExecutiveBoardCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InterimExecutiveBoardCreatedDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IntroductoryEmailSentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalAuthority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<DateTime?>("PowersUsedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ReceiveCompletedConflictOfInterestForm")
                        .HasColumnType("bit");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegionalDirectorAppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RegionalDirectorDecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RegionalDirectorImprovementPlanDecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("RemindAdviserToCopyRiseTeamWhenSentEmail")
                        .HasColumnType("bit");

                    b.Property<bool?>("ReviewImprovementAndExpenditurePlan")
                        .HasColumnType("bit");

                    b.Property<bool?>("SaveCompletedConflictOfinterestFormInSharePoint")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SavedAssessmentTemplateInSharePointDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolIsNotEligibleNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SchoolResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolUrn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SchoolVisitDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("SendConflictOfInterestFormToProposedAdviserAndTheSchool")
                        .HasColumnType("bit");

                    b.Property<bool?>("SendEmailToGrantTeam")
                        .HasColumnType("bit");

                    b.Property<bool?>("SendRequestingPlanningGrantOfferEmailToRiseGrantTeam")
                        .HasColumnType("bit");

                    b.Property<string>("SupportOrganisationIdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportOrganisationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupportProjectStatus")
                        .HasColumnType("int");

                    b.Property<string>("SupportingOrganisationContactEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportingOrganisationContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrustName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrustReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("UseEnrolmentLetterTemplateToDraftEmail")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SupportProject", "RISE");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("SupportProjectHistory", "RISE");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.SupportProjectContact", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organisation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("SupportProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupportProjectId");

                    b.ToTable("SupportProjectContacts", "RISE");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("SupportProjectContactsHistory", "RISE");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.SupportProjectNote", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("SupportProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupportProjectId");

                    b.ToTable("SupportProjectNotes", "RISE");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("SupportProjectNotesHistory", "RISE");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.EngagementConcern", b =>
                {
                    b.HasOne("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.SupportProject", null)
                        .WithMany("EngagementConcerns")
                        .HasForeignKey("SupportProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.FundingHistory", b =>
                {
                    b.HasOne("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.SupportProject", null)
                        .WithMany("FundingHistories")
                        .HasForeignKey("SupportProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlan", b =>
                {
                    b.HasOne("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.SupportProject", null)
                        .WithMany("ImprovementPlans")
                        .HasForeignKey("SupportProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlanObjective", b =>
                {
                    b.HasOne("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlan", null)
                        .WithMany("ImprovementPlanObjectives")
                        .HasForeignKey("ImprovementPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlanObjectiveProgress", b =>
                {
                    b.HasOne("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlanReview", null)
                        .WithMany("ImprovementPlanObjectiveProgresses")
                        .HasForeignKey("ImprovementPlanReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlanReview", b =>
                {
                    b.HasOne("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlan", null)
                        .WithMany("ImprovementPlanReviews")
                        .HasForeignKey("ImprovementPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.SupportProjectContact", b =>
                {
                    b.HasOne("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.SupportProject", null)
                        .WithMany("Contacts")
                        .HasForeignKey("SupportProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.SupportProjectNote", b =>
                {
                    b.HasOne("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.SupportProject", null)
                        .WithMany("Notes")
                        .HasForeignKey("SupportProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlan", b =>
                {
                    b.Navigation("ImprovementPlanObjectives");

                    b.Navigation("ImprovementPlanReviews");
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.ImprovementPlanReview", b =>
                {
                    b.Navigation("ImprovementPlanObjectiveProgresses");
                });

            modelBuilder.Entity("Dfe.ManageSchoolImprovement.Domain.Entities.SupportProject.SupportProject", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("EngagementConcerns");

                    b.Navigation("FundingHistories");

                    b.Navigation("ImprovementPlans");

                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
