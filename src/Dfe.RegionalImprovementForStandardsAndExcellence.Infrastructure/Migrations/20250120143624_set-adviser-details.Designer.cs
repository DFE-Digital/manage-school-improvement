// <auto-generated />
using System;
using Dfe.RegionalImprovementForStandardsAndExcellence.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dfe.RegionalImprovementForStandardsAndExcellence.Infrastructure.Migrations
{
    [DbContext(typeof(RegionalImprovementForStandardsAndExcellenceContext))]
    [Migration("20250120143624_set-adviser-details")]
    partial class setadviserdetails
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dfe.RegionalImprovementForStandardsAndExcellence.Domain.Entities.SupportProject.SupportProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdviserEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedAdviserEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedAdviserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AttachRiseInfoToEmail")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ContactedTheSchoolDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAdviserAssigned")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateConflictsOfInterestWereChecked")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("FindSchoolEmailAddress")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasAcceeptedTargetedSupport")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasSavedSchoolResponseinSharePoint")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalAuthority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<bool?>("RecieveCompletedConflictOfInteresetForm")
                        .HasColumnType("bit");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SaveCompletedConflictOfinterestFormInSharePoint")
                        .HasColumnType("bit");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SchoolResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolUrn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SendConflictOfInterestFormToProposedAdviserAndTheSchool")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseTheNotificationLetterToCreateEmail")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SupportProject", "RISE");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("SupportProjectHistory", "RISE");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dfe.RegionalImprovementForStandardsAndExcellence.Domain.Entities.SupportProject.SupportProjectNote", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<int>("SupportProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupportProjectId");

                    b.ToTable("SupportProjectNotes", "RISE");

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("SupportProjectNotesHistory", "RISE");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dfe.RegionalImprovementForStandardsAndExcellence.Domain.Entities.SupportProject.SupportProjectNote", b =>
                {
                    b.HasOne("Dfe.RegionalImprovementForStandardsAndExcellence.Domain.Entities.SupportProject.SupportProject", null)
                        .WithMany("Notes")
                        .HasForeignKey("SupportProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dfe.RegionalImprovementForStandardsAndExcellence.Domain.Entities.SupportProject.SupportProject", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
