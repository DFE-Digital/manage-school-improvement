name: Run Cypress tests

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      USERNAME:
        required: true
      AZURE_WEB_ENDPOINT:
        required: true
      AZURE_API_ENDPOINT:
        required: true
      AZURE_API_KEY:
        required: true
      CYPRESS_TEST_SECRET:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        type: environment

concurrency:
  group: ${{ github.workflow }}

jobs:
  cypress-tests:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    strategy:
      matrix:
        browser: [
          "edge"
        ]
    container:
      image: cypress/browsers:22.13.1@sha256:914c9814a9567f32660203db7ecd610b8f8fede6e9103885728b3bd3f6dca4ff
    defaults:
      run:
        working-directory: src/Dfe.ManageSchoolImprovement.CypressTests
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          ref: ${{ github.ref }}

      - name: Rise Cypress cache
        uses: cypress-io/github-action@v6
        with:
          runTests: false
          browser: ${{ matrix.browser }}
          working-directory: src/Dfe.ManageSchoolImprovement.CypressTests

      - name: Run (dev)
        if: inputs.environment == 'development'
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_username: ${{ secrets.USERNAME }}
          CYPRESS_grepTags: '-smoke'
          CYPRESS_url: ${{ secrets.AZURE_WEB_ENDPOINT }}
          CYPRESS_apiKey: ${{ secrets.AZURE_API_KEY }}
          CYPRESS_authKey: ${{ secrets.CYPRESS_TEST_SECRET }}
          CYPRESS_api: ${{ secrets.AZURE_API_ENDPOINT }}
          CYPRESS_msiApi: ${{ secrets.AZURE_DEV_MSIAPI_ENDPOINT}}
        with:
          browser: ${{ matrix.browser }}
          working-directory: src/Dfe.ManageSchoolImprovement.CypressTests
          wait-on: ${{ secrets.AZURE_WEB_ENDPOINT }}
          spec: cypress/e2e/**/*.cy.ts

      - name: Run (test)
        if: inputs.environment == 'test'
        uses: cypress-io/github-action@v6
        env:
            CYPRESS_username: ${{ secrets.USERNAME }}
            CYPRESS_url: ${{ secrets.AZURE_WEB_ENDPOINT }}
            CYPRESS_apiKey: ${{ secrets.AZURE_API_KEY }}
            CYPRESS_authKey: ${{ secrets.CYPRESS_TEST_SECRET }}
            CYPRESS_api: ${{ secrets.AZURE_API_ENDPOINT }}
            CYPRESS_msiApi: ${{ secrets.AZURE_TEST_MSIAPI_ENDPOINT}}
        with:
            browser: ${{ matrix.browser }}
            working-directory: src/Dfe.ManageSchoolImprovement.CypressTests
            wait-on: ${{ secrets.AZURE_WEB_ENDPOINT }}
            spec: cypress/e2e/smoke/*

      - name: Upload screenshots
        if: ${{ failure() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: screenshots-${{ inputs.environment }}-${{ matrix.browser }}
          path: src/Dfe.ManageSchoolImprovement.CypressTests/cypress/screenshots

      - name: Generate report
        if: always()
        run: |
          mkdir mochareports
          npm run generate:html:report

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: reports-${{ inputs.environment }}-${{ matrix.browser }}
          path: src/Dfe.ManageSchoolImprovement.CypressTests/mochareports

      - name: Report results to Teams
        if: always()
        run: |
          node scripts/send-teams-notification.js
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
          ENVIRONMENT: ${{ inputs.environment }}
          INFORMATION_LINK: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          